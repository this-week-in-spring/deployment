name: Deploy

env:
  DB_DB: ${{ secrets.DB_DB }}
  DB_HOST: ${{ secrets.DB_HOST  }}
  DB_PW: ${{ secrets.DB_PW  }}
  DB_USER: ${{ secrets.DB_USER  }}
  GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
  PINBOARD_TOKEN: ${{ secrets.PINBOARD_TOKEN }} 
  REDIS_HOST: ${{ secrets.REDIS_HOST }} 
  REDIS_PORT: ${{ secrets.REDIS_PORT }} 
  REDIS_PW: ${{ secrets.REDIS_PW }} 
  TWITTER_CLIENT_KEY : ${{ secrets.TWITTER_TWI_CLIENT_KEY }} 
  TWITTER_CLIENT_KEY_SECRET : ${{ secrets.TWITTER_TWI_CLIENT_KEY_SECRET  }}
  TWI_NS :  ${{ secrets.TWI_NS  }} 
  TWI_DOMAIN : ${{ secrets.TWI_DOMAIN  }}
  INGEST_TAG :  ${{ secrets.INGEST_TAG }}
  INGESTED_TAG :  ${{ secrets.INGESTED_TAG }}
  INGEST_FEED_ENCODED_MAPPINGS : ${{ secrets.INGEST_FEED_ENCODED_MAPPINGS }}
  INGEST_TWITTER_ENCODED_MAPPINGS : ${{ secrets.INGEST_TWITTER_ENCODED_MAPPINGS }}
  
  TWI_OAUTH_CLIENT_KEY : ${{ secrets.TWI_OAUTH_CLIENT_KEY }}
  TWI_OAUTH_CLIENT_KEY_SECRET : ${{ secrets.TWI_OAUTH_CLIENT_KEY_SECRET }}  
  TWI_OAUTH_ISSUER_URI : ${{ secrets.TWI_OAUTH_ISSUER_URI }}  
  
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GCLOUD_ZONE: ${{ secrets.GCLOUD_ZONE }}
  GCLOUD_SA_KEY: ${{ secrets.GCLOUD_SA_KEY }}


on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
      - uses: actions/checkout@v3

      - uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCLOUD_SA_KEY }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ env.GKE_CLUSTER  }}'
          location: '${{ env.GCLOUD_ZONE }}'

      - run: |
          gcloud config set project $GCLOUD_PROJECT 
          gcloud --quiet auth configure-docker
          kubectl get pods

      - name: Helm tool installer
        uses: Azure/setup-helm@v3
        with:
          version: 3.12.0

      - name: Deploy
        run: |
          kubectl get ns/$TWI_NS || kubectl create ns $TWI_NS 
          kubectl config set-context --current --namespace=$TWI_NS
          kubectl config view --minify | grep "namespace:" && echo "found the namespace.."
          cd $GITHUB_WORKSPACE
          ./install.sh
